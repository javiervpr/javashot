// <auto-generated />
using System;
using JavaShotAPI.DALContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JavaShotAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201201012301_requiredfileuser")]
    partial class requiredfileuser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("JavaShotAPI.Models.HistorialPunto", b =>
                {
                    b.Property<Guid>("HistorialPuntoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PartidaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Puntos")
                        .HasColumnType("int");

                    b.HasKey("HistorialPuntoID");

                    b.HasIndex("PartidaID");

                    b.ToTable("HistorialPunto");
                });

            modelBuilder.Entity("JavaShotAPI.Models.Partida", b =>
                {
                    b.Property<Guid>("PartidaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UsuarioID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PartidaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Partida");
                });

            modelBuilder.Entity("JavaShotAPI.Models.PartidaPregunta", b =>
                {
                    b.Property<Guid>("PartidaPreguntaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Contestada")
                        .HasColumnType("bit");

                    b.Property<bool?>("ContestadaCorrectamente")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaRespuesta")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PartidaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PreguntaID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PartidaPreguntaID");

                    b.HasIndex("PartidaID");

                    b.HasIndex("PreguntaID");

                    b.ToTable("PartidaPregunta");
                });

            modelBuilder.Entity("JavaShotAPI.Models.Pregunta", b =>
                {
                    b.Property<Guid>("PreguntaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PreguntaID");

                    b.ToTable("Pregunta");
                });

            modelBuilder.Entity("JavaShotAPI.Models.PreguntaRespuesta", b =>
                {
                    b.Property<Guid>("PreguntaRespuestaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PreguntaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RespuestaID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PreguntaRespuestaID");

                    b.HasIndex("PreguntaID");

                    b.HasIndex("RespuestaID");

                    b.ToTable("PreguntaRespuesta");
                });

            modelBuilder.Entity("JavaShotAPI.Models.Respuesta", b =>
                {
                    b.Property<Guid>("RespuestaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Correcta")
                        .HasColumnType("bit");

                    b.HasKey("RespuestaID");

                    b.ToTable("Respuesta");
                });

            modelBuilder.Entity("JavaShotAPI.Models.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("JavaShotAPI.Models.HistorialPunto", b =>
                {
                    b.HasOne("JavaShotAPI.Models.Partida", "Partida")
                        .WithMany()
                        .HasForeignKey("PartidaID");

                    b.Navigation("Partida");
                });

            modelBuilder.Entity("JavaShotAPI.Models.Partida", b =>
                {
                    b.HasOne("JavaShotAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("JavaShotAPI.Models.PartidaPregunta", b =>
                {
                    b.HasOne("JavaShotAPI.Models.Partida", "Partida")
                        .WithMany()
                        .HasForeignKey("PartidaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JavaShotAPI.Models.Pregunta", "Pregunta")
                        .WithMany()
                        .HasForeignKey("PreguntaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partida");

                    b.Navigation("Pregunta");
                });

            modelBuilder.Entity("JavaShotAPI.Models.PreguntaRespuesta", b =>
                {
                    b.HasOne("JavaShotAPI.Models.Pregunta", "Pregunta")
                        .WithMany()
                        .HasForeignKey("PreguntaID");

                    b.HasOne("JavaShotAPI.Models.Respuesta", "Respuesta")
                        .WithMany()
                        .HasForeignKey("RespuestaID");

                    b.Navigation("Pregunta");

                    b.Navigation("Respuesta");
                });
#pragma warning restore 612, 618
        }
    }
}
